@{
    ViewData["Title"] = "Tic Tac Toe";
}

<h1>@ViewData["Title"]</h1>

<style>
    .board {
        display: grid;
        grid-template-columns: repeat(3, 100px);
        grid-gap: 5px;
        margin-top: 20px;
    }

    .cell {
        width: 100px;
        height: 100px;
        font-size: 2em;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #f2f2f2;
        cursor: pointer;
        border: 1px solid #ccc;
    }

        .cell:hover {
            background-color: #e0e0e0;
        }
</style>

<div class="board" id="board"></div>
<p id="status"></p>

<script>const board = document.getElementById("board");
    const status = document.getElementById("status");
    let cells = Array(9).fill("");
    let currentPlayer = "X";
    let gameOver = false;

    function checkWinner() {
        const winCombos = [
            [0,1,2], [3,4,5], [6,7,8],
            [0,3,6], [1,4,7], [2,5,8],
            [0,4,8], [2,4,6]
        ];

        for (const [a, b, c] of winCombos) {
            if (cells[a] && cells[a] === cells[b] && cells[b] === cells[c]) {
                gameOver = true;
                status.textContent = `${cells[a]} wins!`;
                return;
            }
        }

        if (!cells.includes("")) {
            gameOver = true;
            status.textContent = "It's a draw!";
        }
    }

    function handleClick(index) {
        if (cells[index] || gameOver) return;
        cells[index] = currentPlayer;
        render();
        checkWinner();
        currentPlayer = currentPlayer === "X" ? "O" : "X";
    }

    function render() {
        board.innerHTML = "";
        cells.forEach((value, index) => {
            const div = document.createElement("div");
            div.className = "cell";
            div.textContent = value;
            div.addEventListener("click", () => handleClick(index));
            board.appendChild(div);
        });
    }

    render();</script>
